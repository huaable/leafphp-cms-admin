
<div class="form-group">
    <label class="col-sm-2 control-label" for="input-status">图片</label>
    <div class="col-sm-8">
        <style>
            .img-item {
                display: inline-block;
                position: relative;
            }

            .img-item img {
                height: 90px;
            }

            .js-remove {
                position: absolute;
                top: -8px;
                right: -2px;
                cursor: pointer;
                color: red;
            }
        </style>

        <div class="show-images">
            {% if images is defined and images is not empty %}
                {% for image in images %}
                    <div class="img-item">
                        <img src="{{ image.url() }}" data-image-id="{{ image.id }}">
                        <input type="hidden" name="imageIds[]" value="{{ image.id }}">
                        <span class="js-remove glyphicon glyphicon-minus-sign"></span>
                    </div>
                {% endfor %}
            {% endif %}
        </div>

        <!-- jquery-file-upload 作为目标文件上传插件的文件输入域 -->
        <div class="btn btn-primary btn-sm fileinput-button" style="margin-top: 10px;">
            <span>上传...</span><!--选择文件...-->
            <input class="fileupload" type="file" data-show=".show-images" name="file[]" multiple>
        </div>

        <!-- 进度条 -->
        <div class="progress progress-striped active js-img-progress" data-show=".js-product-image-show"
             style="display: none;">
            <div class="progress-bar progress-bar-info"></div>
        </div>

        <span class="help-block"></span>
    </div>
</div>


<link rel="stylesheet" href="{{ asset('static/jquery-file-upload/css/jquery.fileupload.css') }}">
<!-- 注意 jquery.min.js 避免在页面中重复引用，同时注意引用顺序 -->
<script src="{{ asset('static/jquery/jquery.min.js') }}"></script>
<script src="{{ asset('static/jquery-file-upload/js/vendor/jquery.ui.widget.js') }}"></script>
<script src="{{ asset('static/jquery-file-upload/js/jquery.iframe-transport.js') }}"></script>
<script src="{{ asset('static/jquery-file-upload/js/jquery.fileupload.js') }}"></script>
<script>
    $(function () {
        'use strict';

        var url = '{{ url('product/upload') }}';
        var mobileUploadUrl = "{{ url('product/mobileUpload', {_token: csrf_token()}, true) }}"

        $('.fileupload').fileupload({
            url: url,
            dataType: 'json',
            done: function (e, data) {
                $(".file-upload-progress").hide(); //隐藏进度条
                //e.target 当前点击的按扭
                var showDiv = $(e.target).attr("data-show");
                showImage(data.result.file, showDiv)
            },
            progressall: function (e, data) {
                $('.file-upload-progress').show();
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('.file-upload-progress .progress-bar').css('width', progress + '%');
            }
        });

        function showImage(file, showDiv) {
			var imgItem = $("<div class='img-item'></div>");

			var tempUrl = file.thumbnailUrl._temp; //预览临时图片

			//如果是多图就不需要这句
			// $(showDiv).html('');

			$('<img>').attr('src', tempUrl).appendTo(imgItem);
			//ajax返回的数据中会有一个fileKey，放入js创建的隐藏input中，传到控制器，用于把文件从临时目录移动到正式目录
			$('<input type="hidden" name="fileKey[]">').val(file.fileKey).appendTo(imgItem);

			//删除按扭
			$("<span class='js-remove glyphicon glyphicon-minus-sign'></span>").appendTo(imgItem)
			imgItem.appendTo(showDiv);
        }

        $(".js-from-mobile").click(function (event) {
            var showDiv = $(event.target).attr("data-show")
            //多取几次防重复
            var tag = Math.random() + Math.random() + Math.random() + Math.random() + Math.random()
            var url = mobileUploadUrl + "&tag=" + tag
            //console.log(url)
            window.myQrcode = leaf.ajaxShow(url + "&action=qrcode&url=" + encodeURIComponent(url))

            setTimeout(function () {
                checkMobileUpload(url, showDiv)
            }, 3000)

        })

        function checkMobileUpload(mobileUploadUrl, showDiv) {
            $.ajax({
                type: "GET",
                url: mobileUploadUrl,
                data: {},
                dataType: "json",
                success: function (result) {
                    if (result.status) {
                        showImage(result.file, showDiv)

                        window.myQrcode.close()

                    } else {

                        setTimeout(function () {
                            checkMobileUpload(mobileUploadUrl, showDiv)
                        }, 1000)
                    }
                },
                error: function () {
                    alert('出错了');
                }
            });
        }

        //删除图片
        $(document).on('click', '.js-remove', function () {
            $(this).parents('.img-item').remove();
        })
    });
</script>


```php

//处理已删除的图片
$oldImgIds = Util::arrayColumn($entity->images, 'id');
$keepImageIds = $request->get('imageIds',[]);
$removeIds = array_diff($oldImgIds, $keepImageIds);
if (!empty($removeIds)) {
    Image::whereIn('id', $removeIds)->update([
        'status' => Image::STATUS_DEL,
        'updated_at' => Carbon::now(),
    ]);
}

//处理新增的图片
$imageKeys = $request->get('fileKey', []);
foreach ($imageKeys as $imageKey) {
    $file = $this->moveFromTemp($imageKey, MaterialImage::uploadPath());
    if (empty($file)) {
        continue;
    }
    Image::insert([
        'product_id' => $entity->id,
        'filename' => $file,
    ]);
}

```