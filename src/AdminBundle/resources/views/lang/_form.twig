{#{{ app.html.dropDownList('Lang[status]', app.request.get('Lang').status|default(entity.status), entity.statusAlias(true), {'class':'form-control', 'prompt': '请选择'}) }}#}

<input type="hidden" name="_token" value="{{ csrf_token()}}">

<div class="form-group">
    <label class="col-sm-2 control-label" for="input-name">{{ entity.labels().name }}</label>
    <div class="col-sm-8">
                <input type="text" name="Lang[name]" class="form-control"
                       value="{{ app.request.get('Lang').name|default(entity.name) }}" id="input-name" placeholder="如:English">
                <span class="help-block">{# 帮助信息 #}</span>
    </div>
</div>

<div class="form-group">
    <label class="col-sm-2 control-label" for="input-key">{{ entity.labels().key }}</label>
    <div class="col-sm-8">
                <input type="text" name="Lang[key]" class="form-control"
               value="{{ app.request.get('Lang').key|default(entity.key) }}" id="input-key" placeholder="如:en" >
        <span class="help-block">唯一标识会与后台数据相互绑定，创建后禁止修改。</span>
    </div>
</div>


<div class="form-group">
    <label class="col-sm-2 control-label" for="input-image">{{ entity.labels().flag }}</label>
    <div class="col-sm-8">
        <style>
            .img-item {
                display: inline-block;
                position: relative;
            }

            .img-item img {
                height: 50px;
            }

            .js-remove {
                position: absolute;
                top: -8px;
                right: -2px;
                cursor: pointer;
                color: red;
            }
        </style>

        <div class="show-images">
            {% if images is defined and images is not empty %}
                {% for image in images %}
                    <div class="img-item">
                        <img src="{{ image.url() }}" data-image-id="{{ image.id }}">
                        <input type="hidden" name="imageIds[]" value="{{ image.id }}">
                        <span class="js-remove glyphicon glyphicon-minus-sign"></span>
                    </div>
                {% endfor %}
            {% endif %}
        </div>

        <!-- jquery-file-upload 作为目标文件上传插件的文件输入域 -->
        <div class="btn btn-primary btn-sm fileinput-button" style="margin-top: 10px;">
            <span>上传...</span><!--选择文件...-->
            <input class="fileupload" type="file" data-show=".show-images" name="file[]" multiple>
        </div>

        <!-- 进度条 -->
        <div class="progress progress-striped active js-img-progress" data-show=".js-product-image-show"
             style="display: none;">
            <div class="progress-bar progress-bar-info"></div>
        </div>

        <span class="help-block"></span>
    </div>
</div>
<link rel="stylesheet" href="{{ asset('static/jquery-file-upload/css/jquery.fileupload.css') }}">
<script src="{{ asset('static/jquery-file-upload/js/vendor/jquery.ui.widget.js') }}"></script>
<script src="{{ asset('static/jquery-file-upload/js/jquery.iframe-transport.js') }}"></script>
<script src="{{ asset('static/jquery-file-upload/js/jquery.fileupload.js') }}"></script>
<script>
	$(function () {
		'use strict';

		var url = '{{ url('admin/lang/upload') }}';

		$('.fileupload').fileupload({
			url: url,
			dataType: 'json',
			done: function (e, data) {

				if (data.result.status == false) {
					leaf.alert(data.result.message)
					return;
				}

				$(".file-upload-progress").hide(); //隐藏进度条
				//e.target 当前点击的按扭
				var showDiv = $(e.target).attr("data-show");
				showImage(data.result.file, showDiv)
			},
			progressall: function (e, data) {
				$('.file-upload-progress').show();
				var progress = parseInt(data.loaded / data.total * 100, 10);
				$('.file-upload-progress .progress-bar').css('width', progress + '%');
			}
		});

		function showImage(file, showDiv) {
			var imgItem = $("<div class='img-item'></div>");

			var tempUrl = file.url; //预览临时图片

			//如果是多图就不需要这句
			$(showDiv).html('');

			$('<img>').attr('src', tempUrl).appendTo(imgItem);
			//ajax返回的数据中会有一个fileKey，放入js创建的隐藏input中，传到控制器，用于把文件从临时目录移动到正式目录

			$('<input type="hidden" name="fileKey[]">').val(file.fileKey).appendTo(imgItem);

			//删除按扭
			$("<span class='js-remove glyphicon glyphicon-minus-sign'></span>").appendTo(imgItem)
			imgItem.appendTo(showDiv);
		}

		//删除图片
		$(document).on('click', '.js-remove', function () {
			$(this).parents('.img-item').remove();
		})
	});
</script>
